Features we'd like for the first release (v0.10)

 * Create a fully rfc-compliant icalendar file from scratch
 * output it to the screen (with right headers etc.)
 * be able to save to a file on local drive

Unit tests we need

 * We need to test all property classes to see that they comply with the rfc (parameter names, values)
 * We need to test that qCal only accepts the values permitted in the rfc

Miscillaneous Notes:

 * I'm wondering if we should include some type of log inside the core qCal class so that when errors
   happen they are logged rather than shoved in the user's face
   
 * Josh, I'd like to talk to you about how to handle the setProperty / addProperty issue. I haven't
   yet provided a setProperty method, because some properties can be set multiple times, which would
   make that command ambiguous or at least confusing. I don't yet know what the solution to this 
   problem is. Maybe some type of $cal->setPropertyMultiple situation or something. We'll talk.
   
 * OK, I figured out the solution - a property object (if it allows multiple parameters) will extend
   a qCal_Property_MultipleValue object that in turn extends qCal_Component - this multiple (abstract)
   class will define $value as an array or something (instead of a standard value). Then when it serializes,
   it will just do a implode(';', $this->value)
   
 * I am considering changing the way that abstract classes are handled. I normally name an abstract 
   class or a base class in the following format: qCal_Property or qCal_Property_Base, but I
   think that I would rather just shorten it to qCal_Property in either case - the _Abstract isnt needed
   
 * Also, I may be adding a qCal_Component_icalendar component instead of making the base qCal object a 
   component. I am not sure yet... I'll play around with it 
   
 * Josh - Didn't you mention something about doing $this->allowedParents instead of 
   $this->allowedProperties and $this->allowedComponents? Well if you did, that's a great idea. I'm
   going to play around with that for a while. :)